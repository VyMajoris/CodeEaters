Download exercicios:
http://www.speedyshare.com/petGX/LPBD-NAC2.doc


/*
1-	Desenvolva um script que receba como parâmetro o código do departamento e retorne o nome do departamento, 
o total de funcionários e o salário médio que paga. Utilize o pacote DBMS_OUTPUT.PUT_LINE para exibir o texto resultante. 
Caso o código do departamento não esteja cadastrado na  tabela, retornar a mensagem  “NÃO EXISTE!”. 
*/

create or replace function fun_dados_depto( p_cod_cli in number) 
return sys_refcursor as
l_cursor sys_refcursor;
begin

	open l_cursor for 
  
  select count(d.cd_depto), d.nm_depto, avg(f.vl_salario)  from loc_depto d, loc_funcionario f
where d.cd_depto = f.cd_depto
and d.cd_depto = 50
group by(d.nm_depto);

	return l_cursor;
end;




DECLARE
  cursor_dados SYS_REFCURSOR;
  qtd_func number;
  avg_salario number(10,2);
  nm_depto varchar(10);
BEGIN

  LOOP
      FETCH cursor_dados  INTO qtd_func, nm_depto, avg_salario;
       EXIT WHEN cursor_dados%NOTFOUND;
      DBMS_OUTPUT.PUT_LINE(qtd_func || ' ' || nm_depto || ' ' || avg_salario );
    END LOOP;
END;


/*
3-	Crie um script que armazene num vetor os números de Fibonacci entre dois números 
inteiros e positivos informados pelo usuário. O vetor deve ser impresso no final do processo.
*/
SET Serveroutput ON
DECLARE
  TYPE FIBO_TIPO IS varray(100) OF NUMBER;
  fibo fibo_tipo := fibo_tipo();
  num1 pls_integer := 0 ;
  num2 pls_integer := 0 ;
  user_min pls_integer := &val_min;
  user_max pls_integer := &val_max;
  
  BEGIN
  num2 := 1;  
  
  FOR i IN 1..20 LOOP
  
  if num1 > user_min then
  fibo.EXTEND;
  fibo(i):= 12;
  end if;
  
  if num1 < user_max then
  num1 := num1 + num2;
  num2 := num1 - num2;
  else 
   EXIT;
  END if;
  
  END LOOP;

  for i in fibo.first..fibo.last 
  loop
  dbms_output.put_line(fibo(i));
  end loop;
  
END;
